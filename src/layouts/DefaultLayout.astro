---
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'

const {title} = Astro.props
let subtitle = 'Easybank Landing Page'
---
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">

    <!-- favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon-32x32.png">

    <!-- google fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:wght@300;400;700&display=swap" rel="stylesheet">

    <!-- global css -->
    <link rel="stylesheet" href={Astro.resolve('../styles/globals.css')} />

    <!-- open graph -->
    <meta property="og:title" content="Easybank Landing Page">
    <meta property="og:description" content="Frontend Mentor challenge Easybank Landing Page.">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://frontend-mentor.markteekman.nl/easybank-landing-page">
    <meta property="og:image" content="/assets/social-preview-image.png">

    <!-- page title -->
    <title>{title} - {subtitle}</title>
  </head>
  <body>

    <!-- header -->
    <Header />

    <!-- main -->
    <main id="main-content">

      <slot />

    </main>

    <!-- footer -->
    <Footer />

    <!-- responsive overlay -->
    <div class="responsive-overlay"></div>

  </body>
</html>

<script>
  const animations = [...document.querySelectorAll('.animate')]

  // create observer
  const callback = entries => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('visible')
      }
      
      if (!entry.isIntersecting && entry.boundingClientRect.top > 0) {
        entry.target.classList.remove('visible')
      }
    })
  }

  const observer = new IntersectionObserver(callback)

  // observe boxes
  animations.forEach(animation => observer.observe(animation))
</script>

<style lang="scss">
  @use "../styles/base/breakpoint" as *;

  html,
  body {
    height: 100%;
  }

  body {
    display: flex;
    flex-direction: column;
    background-color: var(--background);
    overflow-x: hidden;

    main { 
      flex: 1 0 auto; 
    }

    footer { 
      flex-shrink: 0; 
    }
  }

  :global(.animate) {
    opacity: 0;
    transform: translateY(5rem);
    transition: opacity 0.75s ease-in-out, transform 0.75s ease-in-out;

    &.visible {
      opacity: 1;
      transform: translateY(0);

      @include breakpoint(medium) {
        &:nth-child(2) { transition-delay: 0.15s; }
        &:nth-child(3) { transition-delay: 0.3s; }
        &:nth-child(4) { transition-delay: 0.45s; }
      }
    }
  }

  .responsive-overlay {
    position: absolute;
    background-image: linear-gradient(to bottom, var(--primary-clr-100), 90%, var(--neutral-clr-400));
    width: 100vw;
    height: 100vh;
    right: 0;
    bottom: 0;
    opacity: 0;
    z-index: -1;
    transition: 0.3s;

    &.show {
      opacity: 0.8;
      z-index: 1;
    }
  }
</style>