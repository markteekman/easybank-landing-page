<nav class="main-navigation">
  <ul>
    <li><a href="#" aria-current="page">Home</a></li>
    <li><a href="#">About</a></li>
    <li><a href="#">Contact</a></li>
    <li><a href="#">Blog</a></li>
    <li><a href="#">Careers</a></li>
  </ul>
</nav>

<script hoist>
  // variables
  const mainNav = document.querySelector('#main-navigation')
  const mainMenu = mainNav.querySelector('ul')

  // execution
  mainMenu && mainMenu.addEventListener('keydown', event => {
    const currentMenuItem = event.target.closest('li')
    const menuItems = [...mainMenu.querySelectorAll('li')]
    const index = menuItems.findIndex(item => item === currentMenuItem)

    const key = event.key
    let targetItem

    // move right on arrow right
    if (key === 'ArrowRight') {
      // if it's the last item, go the first, else go to next
      if (menuItems.indexOf(currentMenuItem) === menuItems.length - 1) {
        targetItem = menuItems[0]
      } else {
        targetItem = menuItems[index + 1]
      }
    }

    // move left on arrow left
    if (key === 'ArrowLeft') {
      // if it's the first item, go the last, else go to next
      if (menuItems.indexOf(currentMenuItem) === 0) {
        targetItem = menuItems[menuItems.length - 1]
      } else {
        targetItem = menuItems[index - 1]
      }
    }

    // escape to go back to first item
    if (key === 'Escape') {
      targetItem = menuItems[0]
    }

    // set focus on target item
    if (targetItem) {
      targetItem.querySelector('a, button, input').focus()
    }
  })
</script>

<style lang="scss">
  @use "../styles/base/space" as *;

  .main-navigation {
    position: absolute;
    top: $space-96;
    left: 1.25rem;
    right: 1.25rem;
    padding: 1.5rem;
    background-color: var(--neutral-clr-400);
    border-radius: 6px;
    opacity: 0;

    :global(~ .call-to-action) {
      display: none;
    }

    &.show {
      opacity: 1;
      transition: opacity 0.3s;
    }

    ul {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 1rem;

      a {
        color: var(--primary-clr-100);
        text-decoration: none;
      }

      a:hover,
      a:focus,
      a[aria-current="page"] {
        font-weight: bold;
        text-decoration: underline;
      }
    }

    // desktop styling
    @media (min-width: 920px) {
      display: block;
      position: relative;
      top: 0;
      left: 0;
      right: 0;
      opacity: 1;
      padding: 0.25rem;

      :global(~ .call-to-action) {
        display: block;
      }

      ul {
        flex-direction: row;
        gap: 0.75rem;

        li {
          min-width: 6ch;
        }

        a {
          display: flex;
          flex-direction: column;
          align-items: center;
          font-size: 0.95rem;
          padding: 1rem 0;
        }

        a::after {
          content: '';
          display: block;
          width: 60px;
          height: 5px;
          position: absolute;
          bottom: 0;
          background: linear-gradient(to right, var(--primary-clr-200), var(--primary-clr-300));
          opacity: 0;
          transition: opacity 0.2s ease-in-out
        }

        a:hover::after,
        a:focus::after,
        a[aria-current="page"]::after {
          opacity: 1;
        }

        a:hover,
        a:focus,
        a[aria-current="page"] {
          text-decoration: none;
        }
      }
    }
  }
</style>